// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Joined extends ethereum.Event {
  get params(): Joined__Params {
    return new Joined__Params(this);
  }
}

export class Joined__Params {
  _event: Joined;

  constructor(event: Joined) {
    this._event = event;
  }

  get _nonce(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _by(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Report extends ethereum.Event {
  get params(): Report__Params {
    return new Report__Params(this);
  }
}

export class Report__Params {
  _event: Report;

  constructor(event: Report) {
    this._event = event;
  }

  get hit(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }

  get _game(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Shot extends ethereum.Event {
  get params(): Shot__Params {
    return new Shot__Params(this);
  }
}

export class Shot__Params {
  _event: Shot;

  constructor(event: Shot) {
    this._event = event;
  }

  get _x(): i32 {
    return this._event.parameters[0].value.toI32();
  }

  get _y(): i32 {
    return this._event.parameters[1].value.toI32();
  }

  get _game(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Started extends ethereum.Event {
  get params(): Started__Params {
    return new Started__Params(this);
  }
}

export class Started__Params {
  _event: Started;

  constructor(event: Started) {
    this._event = event;
  }

  get _nonce(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get _by(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Won extends ethereum.Event {
  get params(): Won__Params {
    return new Won__Params(this);
  }
}

export class Won__Params {
  _event: Won;

  constructor(event: Won) {
    this._event = event;
  }

  get _winner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get _nonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get _by(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class BattleshipGame__gameStateResult {
  value0: Array<Address>;
  value1: Array<BigInt>;
  value2: BigInt;
  value3: Array<BigInt>;
  value4: Address;

  constructor(
    value0: Array<Address>,
    value1: Array<BigInt>,
    value2: BigInt,
    value3: Array<BigInt>,
    value4: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddressArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigIntArray(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    return map;
  }
}

export class BattleshipGame__gamesResult {
  value0: BigInt;
  value1: Address;

  constructor(value0: BigInt, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }
}

export class BattleshipGame extends ethereum.SmartContract {
  static bind(address: Address): BattleshipGame {
    return new BattleshipGame("BattleshipGame", address);
  }

  gameIndex(): BigInt {
    let result = super.call("gameIndex", "gameIndex():(uint256)", []);

    return result[0].toBigInt();
  }

  try_gameIndex(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("gameIndex", "gameIndex():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gameState(_game: BigInt): BattleshipGame__gameStateResult {
    let result = super.call(
      "gameState",
      "gameState(uint256):(address[2],uint256[2],uint256,uint256[2],address)",
      [ethereum.Value.fromUnsignedBigInt(_game)]
    );

    return new BattleshipGame__gameStateResult(
      result[0].toAddressArray(),
      result[1].toBigIntArray(),
      result[2].toBigInt(),
      result[3].toBigIntArray(),
      result[4].toAddress()
    );
  }

  try_gameState(
    _game: BigInt
  ): ethereum.CallResult<BattleshipGame__gameStateResult> {
    let result = super.tryCall(
      "gameState",
      "gameState(uint256):(address[2],uint256[2],uint256,uint256[2],address)",
      [ethereum.Value.fromUnsignedBigInt(_game)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BattleshipGame__gameStateResult(
        value[0].toAddressArray(),
        value[1].toBigIntArray(),
        value[2].toBigInt(),
        value[3].toBigIntArray(),
        value[4].toAddress()
      )
    );
  }

  games(param0: BigInt): BattleshipGame__gamesResult {
    let result = super.call("games", "games(uint256):(uint256,address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return new BattleshipGame__gamesResult(
      result[0].toBigInt(),
      result[1].toAddress()
    );
  }

  try_games(param0: BigInt): ethereum.CallResult<BattleshipGame__gamesResult> {
    let result = super.tryCall("games", "games(uint256):(uint256,address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new BattleshipGame__gamesResult(value[0].toBigInt(), value[1].toAddress())
    );
  }

  isTrustedForwarder(forwarder: Address): boolean {
    let result = super.call(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );

    return result[0].toBoolean();
  }

  try_isTrustedForwarder(forwarder: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isTrustedForwarder",
      "isTrustedForwarder(address):(bool)",
      [ethereum.Value.fromAddress(forwarder)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  playing(param0: Address): BigInt {
    let result = super.call("playing", "playing(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_playing(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("playing", "playing(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _forwarder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _bv(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _sv(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class FirstTurnCall extends ethereum.Call {
  get inputs(): FirstTurnCall__Inputs {
    return new FirstTurnCall__Inputs(this);
  }

  get outputs(): FirstTurnCall__Outputs {
    return new FirstTurnCall__Outputs(this);
  }
}

export class FirstTurnCall__Inputs {
  _call: FirstTurnCall;

  constructor(call: FirstTurnCall) {
    this._call = call;
  }

  get _game(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _shot(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class FirstTurnCall__Outputs {
  _call: FirstTurnCall;

  constructor(call: FirstTurnCall) {
    this._call = call;
  }
}

export class JoinGameCall extends ethereum.Call {
  get inputs(): JoinGameCall__Inputs {
    return new JoinGameCall__Inputs(this);
  }

  get outputs(): JoinGameCall__Outputs {
    return new JoinGameCall__Outputs(this);
  }
}

export class JoinGameCall__Inputs {
  _call: JoinGameCall;

  constructor(call: JoinGameCall) {
    this._call = call;
  }

  get _game(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _boardHash(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get a(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get b_0(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get b_1(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get c(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }
}

export class JoinGameCall__Outputs {
  _call: JoinGameCall;

  constructor(call: JoinGameCall) {
    this._call = call;
  }
}

export class NewGameCall extends ethereum.Call {
  get inputs(): NewGameCall__Inputs {
    return new NewGameCall__Inputs(this);
  }

  get outputs(): NewGameCall__Outputs {
    return new NewGameCall__Outputs(this);
  }
}

export class NewGameCall__Inputs {
  _call: NewGameCall;

  constructor(call: NewGameCall) {
    this._call = call;
  }

  get _boardHash(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get a(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }

  get b_0(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get b_1(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get c(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }
}

export class NewGameCall__Outputs {
  _call: NewGameCall;

  constructor(call: NewGameCall) {
    this._call = call;
  }
}

export class TurnCall extends ethereum.Call {
  get inputs(): TurnCall__Inputs {
    return new TurnCall__Inputs(this);
  }

  get outputs(): TurnCall__Outputs {
    return new TurnCall__Outputs(this);
  }
}

export class TurnCall__Inputs {
  _call: TurnCall;

  constructor(call: TurnCall) {
    this._call = call;
  }

  get _game(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _hit(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }

  get _next(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get a(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get b_0(): Array<BigInt> {
    return this._call.inputValues[4].value.toBigIntArray();
  }

  get b_1(): Array<BigInt> {
    return this._call.inputValues[5].value.toBigIntArray();
  }

  get c(): Array<BigInt> {
    return this._call.inputValues[6].value.toBigIntArray();
  }
}

export class TurnCall__Outputs {
  _call: TurnCall;

  constructor(call: TurnCall) {
    this._call = call;
  }
}
